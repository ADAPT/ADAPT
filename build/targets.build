<?xml version="1.0"?>

<project name="targetsbuild" basedir=".">
  <include buildfile="./properties.build" failonerror="true"/>

  <target name="updateVersion" description="updates version file">
	<version buildtype="NoIncrement" revisiontype="Increment" path="${versionPath}${versionFile}" failonerror="false" prefix="adapt"/>
  </target>
   
  <target name="unittest" description="Execute unit tests using nUnit" basdir=".">
    <property name="test.wildcard" value="*Test.dll" />
    <call target="nunitTest" />
  </target>

  <target name="acceptancetest" description="Execute Acceptance tests using MSTest" basedir=".">
    <property name="test.wildcard" value="*AcceptanceTests.dll" />
    <call target="nunitTest" />
  </target>
  
  <target name="build" depends="UpdatePackages">
    <exec program="${msbuild.path}">
      <arg line='"${solutionDir}\${solutionName}"' />
      <arg value="/property:Configuration=${configuration};Platform=${platform}"/>
      <arg value="/t:Rebuild"/>
    </exec>
  </target>
  
  <target name="buildVisualizer" depends="UpdateVisualizerPackages">
	<exec program="${msbuild.path}">
		<arg line='"${visualizerSolutionDir}\${visualizerSolutionName}"' />
		<arg value="/property:Configuration=${configuration};Platform=${platform}"/>
		<arg value="/t:Rebuild"/>
	</exec>
  </target>
  
  <target name="UpdateVisualizerPackages">
    <property name="solution" value="" />
    <foreach item="File" property="pluginSolution" verbose="true">
      <in>
        <items basedir=".">
          <include name=".\..\Visualizer\*.sln" />
        </items>
      </in>
      <do>
        <property name="packagesDirectory" value="${directory::get-parent-directory(pluginSolution)}\packages" />
        <echo message="${packagesDirectory}" />
        <mkdir dir="${packagesDirectory}" unless="${directory::exists(packagesDirectory)}" />
		<echo message="restoring nuget packages : ${pluginSolution}" />
		<exec program="NuGet.exe"> 
		  <arg line="restore ${pluginSolution} -noninteractive -Verbosity detailed" />
		</exec>
		<echo message="updating nuget packages : ${pluginSolution}" />
		<exec program="NuGet.exe" >
		  <arg line="update ${pluginSolution} -FileConflictAction Overwrite -Verbosity normal" />
		</exec>
      </do>
    </foreach>
  </target>

  <target name="UpdatePackages">
    <property name="solution" value="" />
    <foreach item="File" property="pluginSolution" verbose="true">
      <in>
        <items basedir=".">
          <include name=".\..\**\*.sln" />
        </items>
      </in>
      <do>
        <property name="packagesDirectory" value="${directory::get-parent-directory(pluginSolution)}\packages" />
        <echo message="${packagesDirectory}" />
        <mkdir dir="${packagesDirectory}" unless="${directory::exists(packagesDirectory)}" />

        <echo message="updating nuget packages : ${pluginSolution}" />
        <exec program="NuGet.exe" >
          <arg line="update ${pluginSolution} -FileConflictAction Overwrite -Verbosity normal" />
        </exec>
      </do>
    </foreach>
  </target>

  <target name="getnugetversion">
	<property name="buildnumber" value="${adapt.version}" />
    <property name="version" value="${buildnumber}-prerelease" />
    <if test="${property::exists('isRelease')}">
      <if test="${isRelease}">
        <property name="version" value="${buildnumber}" />
      </if>
    </if>
  </target>

  <target name="packagePlugin">
    <call target="getnugetversion" />
    <exec program="nuget" workingdir="${solutionDir}">
      <arg line="pack ${nuspecfile}" />
      <arg line="-Version ${version}" />
    </exec>
  </target>

  <target name="adapt" depends="updateVersion,packagePlugin">
    <call target="getnugetversion" />
    <property name="packagename" value="${nupkgName}.${version}.nupkg" />
    <exec program="nuget" workingdir="${solutionDir}">
      <arg line="push ${packagename}" />
      <arg line="-ApiKey ${nugetapikey}" />
      <arg line="-Source ${nugetserverpath}" />
    </exec>
  </target>

  <target name="settestfileslist">
    <property name="nunittest.filelist" value="" />
    <foreach item="File" property="testfile" verbose="true">
      <echo message="set test files list with ${solutionDir}"/>
      <in>
        <items basedir=".">
          <include name="${solutionDir}\**\${test.wildcard}" />
          <exclude name="${solutionDir}\**\obj\**\*.dll"/>
        </items>
      </in>
      <do>
        <property name="nunittest.filelist" value='${nunittest.filelist} ${testfile}'/>
        <echo message='${nunittest.filelist}'/>
      </do>
    </foreach>
  </target>

  <target name="nunitTest" description="Execute nunit tests" depends="build">
    <call target="settestfileslist" />
    <exec program="${nunit.exe}" commandline="${nunittest.filelist} /framework=4.0" failonerror="true" />
  </target>
</project>